// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NutvaCms.Persistence.DbContexts;

#nullable disable

namespace NutvaCms.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623151125_InitialTable")]
    partial class InitialTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.Banner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Published")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.BlogPostMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AltText")
                        .HasColumnType("text");

                    b.Property<Guid>("BlogPostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasColumnType("text");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogPostMedia");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBusy")
                        .HasColumnType("boolean");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChatAdmins");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatSessionId")
                        .HasColumnType("integer");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatSessionId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChatAdminId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatAdminId");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BuyClickCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.PurchaseRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.SiteStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalVisits")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SiteStatistics");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.TrackingPixel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Script")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TrackingPixels");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.Banner", b =>
                {
                    b.OwnsOne("NutvaCms.Domain.Entities.BannerTranslation", "En", b1 =>
                        {
                            b1.Property<Guid>("BannerId")
                                .HasColumnType("uuid");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BannerId");

                            b1.ToTable("Banners");

                            b1.WithOwner()
                                .HasForeignKey("BannerId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.BannerTranslation", "Ru", b1 =>
                        {
                            b1.Property<Guid>("BannerId")
                                .HasColumnType("uuid");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BannerId");

                            b1.ToTable("Banners");

                            b1.WithOwner()
                                .HasForeignKey("BannerId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.BannerTranslation", "Uz", b1 =>
                        {
                            b1.Property<Guid>("BannerId")
                                .HasColumnType("uuid");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BannerId");

                            b1.ToTable("Banners");

                            b1.WithOwner()
                                .HasForeignKey("BannerId");
                        });

                    b.Navigation("En")
                        .IsRequired();

                    b.Navigation("Ru")
                        .IsRequired();

                    b.Navigation("Uz")
                        .IsRequired();
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.BlogPost", b =>
                {
                    b.OwnsOne("NutvaCms.Domain.Entities.BlogPostTranslation", "En", b1 =>
                        {
                            b1.Property<Guid>("BlogPostId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BlogPostId");

                            b1.ToTable("BlogPosts");

                            b1.WithOwner()
                                .HasForeignKey("BlogPostId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.BlogPostTranslation", "Ru", b1 =>
                        {
                            b1.Property<Guid>("BlogPostId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BlogPostId");

                            b1.ToTable("BlogPosts");

                            b1.WithOwner()
                                .HasForeignKey("BlogPostId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.BlogPostTranslation", "Uz", b1 =>
                        {
                            b1.Property<Guid>("BlogPostId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Subtitle")
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("BlogPostId");

                            b1.ToTable("BlogPosts");

                            b1.WithOwner()
                                .HasForeignKey("BlogPostId");
                        });

                    b.Navigation("En")
                        .IsRequired();

                    b.Navigation("Ru")
                        .IsRequired();

                    b.Navigation("Uz")
                        .IsRequired();
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.BlogPostMedia", b =>
                {
                    b.HasOne("NutvaCms.Domain.Entities.BlogPost", "BlogPost")
                        .WithMany("Media")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatMessage", b =>
                {
                    b.HasOne("NutvaCms.Domain.Entities.ChatSession", "ChatSession")
                        .WithMany("Messages")
                        .HasForeignKey("ChatSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatSession", b =>
                {
                    b.HasOne("NutvaCms.Domain.Entities.ChatAdmin", "ChatAdmin")
                        .WithMany()
                        .HasForeignKey("ChatAdminId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ChatAdmin");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("NutvaCms.Domain.Entities.ProductTranslation", "En", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.ProductTranslation", "Ru", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("NutvaCms.Domain.Entities.ProductTranslation", "Uz", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaKeywords")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("MetaTitle")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("En")
                        .IsRequired();

                    b.Navigation("Ru")
                        .IsRequired();

                    b.Navigation("Uz")
                        .IsRequired();
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.PurchaseRequest", b =>
                {
                    b.HasOne("NutvaCms.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.BlogPost", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("NutvaCms.Domain.Entities.ChatSession", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
